name: java-test

on:
  push:
    branches:
      - main
      - master
    tags:
      - '*'
  pull_request:
    branches:
      - main
    paths:
      - "java/**"
  workflow_dispatch:

jobs:
  test:
    permissions:
      actions: write  # for styfle/cancel-workflow-action to cancel/stop running workflows
      contents: read  # for actions/checkout to fetch code
    name: "${{ matrix.root-pom }} on JDK ${{ matrix.java }} for the classifier ${{ matrix.classifier }}"
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            classifier: linux-x86_64
            java: 8
            root-pom: 'pom.xml'
          - os: ubuntu-latest
            classifier: linux-aarch_64
            java: 8
            root-pom: 'pom.xml'
          - os: windows-latest
            classifier: windows-x86_64
            java: 8
            root-pom: 'pom.xml'
          - os: macos-latest
            classifier: osx-x86_64
            java: 8
            root-pom: 'pom.xml'
          - os: macos-latest
            classifier: osx-aarch_64
            java: 8
            root-pom: 'pom.xml'
    runs-on: ${{ matrix.os }}
    env:
      ROOT_POM: ${{ matrix.root-pom }}
    steps:
      - uses: actions/checkout@v4

      - name: 'Set up JDK ${{ matrix.java }}'
        uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2
        with:
          java-version: ${{ matrix.java }}
          distribution: 'zulu'
          cache: 'maven'

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install rust nightly toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: 1.77
          override: true
          components: clippy, rustfmt

      - name: Setup linux-aarch_64 rust target
        if: "contains(matrix.classifier, 'linux-aarch_64')"
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          # Setup for cargo
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
      
      - name: 'Test'
        shell: bash
        working-directory: java
        run: make test

      - name: 'Build and Deploy'
        shell: bash
        working-directory: java
        run: |
            mvn clean package -DskipTests=true -Djni.classifier=${{ matrix.classifier }} 

      - name: 'Upload artifact'
        uses: actions/upload-artifact@v3
        with:
          name: kcl-lib-${{ matrix.classifier }}
          path: |
            java/target/classes/native
  
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: [ test ]
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 8
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Download windows x86_64 lib
        uses: actions/download-artifact@v3
        with:
          name: kcl-lib-windows-x86_64
          path: java/native

      - name: Download linux x86_64 lib
        uses: actions/download-artifact@v3
        with:
          name: kcl-lib-linux-x86_64
          path: java/native

      - name: Download linux aarch_64 lib
        uses: actions/download-artifact@v3
        with:
          name: kcl-lib-linux-aarch_64
          path: java/native

      - name: Download darwin x86_64 lib
        uses: actions/download-artifact@v3
        with:
          name: kcl-lib-osx-x86_64
          path: java/native

      - name: Download darwin aarch_64 lib
        uses: actions/download-artifact@v3
        with:
          name: kcl-lib-osx-aarch_64
          path: java/native

      - name: Deploy to Github Packages
        working-directory: java
        run: |
          mvn clean package deploy -DskipTests=true -DserverId=github -s ../.github/mvn-settings.xml
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ github.token }}
          
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: kcl-lib
          path: java/target/*.jar
